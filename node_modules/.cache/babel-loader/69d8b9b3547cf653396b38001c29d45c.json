{"ast":null,"code":"var _jsxFileName = \"/Users/karthikeyanmani/interview/rewards-program/src/App.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './App.css';\nimport data from './data';\n\nfunction App() {\n  const [loadedData, setloadedData] = useState({});\n  const [userRewards, setCalcRewards] = useState({});\n  const [userTransactions, setUserTransactions] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [newTransaction, setNewTransaction] = useState({\n    date: new Date(),\n    amount: 0\n  });\n  useEffect(() => {\n    console.log('Help');\n    setloadedData({ ...data\n    });\n    setUsers([...Object.keys(data)]);\n  }, []);\n\n  const userSelect = value => {\n    setCurrentUser(value);\n    let userData = loadedData[value];\n    let monthT = {\n      1: {\n        amounts: [],\n        rewards: 0\n      },\n      2: {\n        amounts: [],\n        rewards: 0\n      },\n      3: {\n        amounts: [],\n        rewards: 0\n      }\n    };\n\n    for (let i = 0; i < userData.length; i++) {\n      let month = new Date(userData[i]['date']);\n\n      if (month.getMonth() + 1 == 1 || month.getMonth() + 1 == 2 || month.getMonth() + 1 == 3) {\n        monthT[month.getMonth() + 1]['amounts'].push(userData[i]['amount']);\n      }\n    }\n\n    for (let key in monthT) {\n      let total_month_rewards = 0;\n\n      for (let i = 0; i < monthT[key]['amounts'].length; i++) {\n        let price = monthT[key]['amounts'][i];\n        total_month_rewards = total_month_rewards + calRew(price);\n      }\n\n      monthT[key]['rewards'] = total_month_rewards;\n    }\n\n    console.log(monthT);\n    setCalcRewards({ ...monthT\n    });\n    setUserTransactions([...userData]);\n  };\n\n  const updateInput = e => {\n    if (e.target.name === \"date\") {\n      setNewTransaction({ ...newTransaction,\n        ...{\n          date: e.target.value\n        }\n      });\n    }\n\n    if (e.target.name === \"amount\") {\n      setNewTransaction({ ...newTransaction,\n        ...{\n          amount: e.target.value\n        }\n      });\n    }\n  };\n\n  const btnAddtransaction = () => {\n    let data = { ...loadedData\n    };\n    let month = new Date(newTransaction['date']);\n\n    if (month.getMonth() + 1 == 1 || month.getMonth() + 1 == 2 || month.getMonth() + 1 == 3) {\n      console.log('new', newTransaction);\n      data[currentUser].push(newTransaction);\n      console.log(data);\n      setloadedData({ ...data\n      });\n      userSelect(currentUser);\n    }\n\n    setNewTransaction({\n      date: new Date(),\n      amount: 0\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    //username 8character\n    React.createElement(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        marginBottom: \"50px\",\n        fontSize: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, \"Rewards Program\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => userSelect(e.target.value),\n      value: currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Select User\"), users.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        value: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, \" \", item.toUpperCase(), \" \");\n    }))), Object.keys(userRewards).length > 0 && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"customers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Month\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Rewards\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"First Month\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, userRewards[1][\"rewards\"])), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Second Month\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, userRewards[2][\"rewards\"])), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Third Month\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, userRewards[3][\"rewards\"])), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Total Reward\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, userRewards[1][\"rewards\"] + userRewards[2][\"rewards\"] + userRewards[3][\"rewards\"])))), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, \"User Transactions\"), userTransactions.length > 0 ? /*#__PURE__*/React.createElement(\"table\", {\n      className: \"customers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, \"Rewards\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, userTransactions.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, item[\"date\"]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, item[\"amount\"]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, calRew(item[\"amount\"])));\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, \"No Transactions Found\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, \"Add Transactions\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, \"Only Transactions between 01/01/2022 and 03/31/2022 will be added\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"Date : \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"date\",\n      value: newTransaction.date,\n      onChange: e => updateInput(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Amount :\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"amount\",\n      value: newTransaction.amount,\n      onChange: e => updateInput(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => btnAddtransaction(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, \"Add Transaction\"))))\n  );\n}\n\nexport default App;\n\nfunction calRew(price) {\n  let rewards = 0;\n\n  if (price > 100) {\n    rewards = 2 * (price - 100) + 50;\n  } else if (price > 50 && price <= 100) {\n    rewards = price - 50;\n  } else {\n    rewards = 0;\n  }\n\n  return rewards;\n}","map":{"version":3,"sources":["/Users/karthikeyanmani/interview/rewards-program/src/App.js"],"names":["React","useState","useEffect","Fragment","data","App","loadedData","setloadedData","userRewards","setCalcRewards","userTransactions","setUserTransactions","users","setUsers","currentUser","setCurrentUser","newTransaction","setNewTransaction","date","Date","amount","console","log","Object","keys","userSelect","value","userData","monthT","amounts","rewards","i","length","month","getMonth","push","key","total_month_rewards","price","calRew","updateInput","e","target","name","btnAddtransaction","marginTop","marginBottom","fontSize","textAlign","map","item","index","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './App.css';\nimport data from './data';\n\nfunction App() {\n  const [loadedData, setloadedData] = useState({});\n  const [userRewards, setCalcRewards] = useState({});\n  const [userTransactions, setUserTransactions] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [newTransaction, setNewTransaction] = useState({ date: new Date(), amount: 0 });\n\n  useEffect(() => {\n    console.log('Help');\n    setloadedData({ ...data });\n    setUsers([...Object.keys(data)]);\n\n  }, []);\n\n\n  const userSelect = (value) => {\n    setCurrentUser(value);\n    let userData = loadedData[value];\n\n    let monthT = {\n      1: {\n        amounts: [],\n        rewards: 0,\n      },\n      2: {\n        amounts: [],\n        rewards: 0,\n      },\n      3: {\n        amounts: [],\n        rewards: 0,\n      },\n    };\n    for (let i = 0; i < userData.length; i++) {\n      let month = new Date(userData[i]['date']);\n      if (month.getMonth() + 1 == 1 || month.getMonth() + 1 == 2 || month.getMonth() + 1 == 3) {\n        monthT[month.getMonth() + 1]['amounts'].push(userData[i]['amount']);\n      }\n    }\n    for (let key in monthT) {\n      let total_month_rewards = 0;\n      for (let i = 0; i < monthT[key]['amounts'].length; i++) {\n        let price = monthT[key]['amounts'][i];\n\n        total_month_rewards = total_month_rewards + calRew(price);\n      }\n      monthT[key]['rewards'] = total_month_rewards;\n    }\n    console.log(monthT)\n    setCalcRewards({ ...monthT });\n    setUserTransactions([...userData]);\n  };\n\n  const updateInput = (e) => {\n    if (e.target.name === \"date\") {\n      setNewTransaction({ ...newTransaction, ...{ date: e.target.value } });\n    }\n    if (e.target.name === \"amount\") {\n      setNewTransaction({ ...newTransaction, ...{ amount: e.target.value } });\n    }\n  }\n\n  const btnAddtransaction = () => {\n    let data = { ...loadedData };\n    let month = new Date(newTransaction['date']);\n    if (month.getMonth() + 1 == 1 || month.getMonth() + 1 == 2 || month.getMonth() + 1 == 3) {\n      console.log('new',newTransaction)\n      data[currentUser].push(newTransaction);\n      console.log(data)\n      setloadedData({ ...data });\n\n      userSelect(currentUser);\n    }\n    setNewTransaction({ date: new Date(), amount: 0 });\n  }\n  return (\n    //username 8character\n    <div style={{\n      marginTop: \"20px\",\n      marginBottom: \"50px\",\n      fontSize: \"20px\",\n    }}>\n      <h2 style={{ textAlign: \"center\" }}>Rewards Program</h2>\n      <div className=\"select-style\">\n        <select onChange={e => userSelect(e.target.value)} value={currentUser} >\n          <option value=\"\" disabled>Select User</option>\n          {users.map((item, index) => {\n            return (\n              <option key={index} value={item}> {item.toUpperCase()} </option>\n            );\n          })}\n        </select>\n      </div>\n      {Object.keys(userRewards).length > 0 &&\n        <Fragment>\n          <table className=\"customers\">\n            <thead>\n              <tr>\n                <th>Month</th>\n                <th>Rewards</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>First Month</td>\n                <td>{userRewards[1][\"rewards\"]}</td>\n              </tr>\n              <tr>\n                <td>Second Month</td>\n                <td>{userRewards[2][\"rewards\"]}</td>\n              </tr>\n              <tr>\n                <td>Third Month</td>\n                <td>{userRewards[3][\"rewards\"]}</td>\n              </tr>\n              <tr>\n                <td>Total Reward</td>\n                <td>{userRewards[1][\"rewards\"] + userRewards[2][\"rewards\"] + userRewards[3][\"rewards\"]}</td>\n              </tr>\n            </tbody>\n          </table>\n          <h4>User Transactions</h4>\n          {userTransactions.length > 0 ?\n            <table className=\"customers\">\n              <thead>\n                <tr>\n                  <th>Date</th>\n                  <th>Amount</th>\n                  <th>Rewards</th>\n                </tr>\n\n              </thead>\n              <tbody>\n                {userTransactions.map((item, index) => {\n                  return <tr key={index}>\n                    <td>{item[\"date\"]}</td>\n                    <td>{item[\"amount\"]}</td>\n                    <td>{calRew(item[\"amount\"])}</td>\n                  </tr>\n                })}\n              </tbody>\n            </table>\n            : <div>No Transactions Found</div>}\n          <div>\n            <h4>Add Transactions</h4>\n            <h5>Only Transactions between 01/01/2022 and 03/31/2022 will be added</h5>\n            <label>Date : </label><input type=\"date\" name=\"date\" value={newTransaction.date} onChange={(e) => updateInput(e)}></input>\n            <label>Amount :</label><input type=\"number\" name=\"amount\" value={newTransaction.amount} onChange={(e) => updateInput(e)}></input>\n            <button onClick={() => btnAddtransaction()}>Add Transaction</button>\n          </div>\n        </Fragment>\n      }\n\n\n    </ div >\n  );\n}\n\nexport default App;\n\nfunction calRew(price) {\n  let rewards = 0;\n  if (price > 100) {\n    rewards = 2*(price - 100) + 50;\n  } else if (price > 50 && price<=100) {\n    rewards = price - 50;  \n  } else{\n    rewards = 0;\n  }\n  return rewards;\n}\n"]},"metadata":{},"sourceType":"module"}